<Window x:Class="MovieEditor.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MovieEditor"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:behavior="clr-namespace:MovieEditor.Views.Behavior"
        mc:Ignorable="d"
        Title="Movie Editor v1.2.2" Height="900" Width="800"
        ui:WindowHelper.UseModernWindowStyle="True">
    <Window.Resources>
        <!--DefaultListViewItemStyleをBasedOnするとGridViewColumnの中でDisplayMemberBindingにより各要素をBindingすることができない。
        Templateを定義して、ItemTemplateとして反映させる-->
        <!--サムネイルを表示せずにファイル名を表示する用-->
        <DataTemplate x:Key="ThumbnailHidden">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="250" />
                    <ColumnDefinition Width="140" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Content="削除"
                    Command="{Binding DataContext.RemoveItemCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                    CommandParameter="{Binding Info.FilePath}" />
                <CheckBox Grid.Column="1" IsChecked="{Binding IsChecked}" />
                <TextBlock Grid.Column="2" Text="{Binding Info.FileName}" />
                <TextBlock Grid.Column="3" Text="{Binding TrimPeriod}" />
                <TextBlock Grid.Column="4" Text="{Binding Info.FrameRateString}" />
                <TextBlock Grid.Column="5" Text="{Binding Info.FileSizeString}" />
                <TextBlock Grid.Column="6" Text="{Binding Info.ScaleString}" />
                <TextBlock Grid.Column="7" Text="{Binding Info.VideoBitRateString}" />
                <TextBlock Grid.Column="8" Text="{Binding Info.VideoCodec}" />
                <TextBlock Grid.Column="9" Text="{Binding Info.FormattedDuration}" />
            </Grid>
        </DataTemplate>
        
        <!--ファイル名の代わりにサムネイルを表示する用-->
        <DataTemplate x:Key="ThumbnailVisible">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="250" />
                    <ColumnDefinition Width="140" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Content="削除"
                    Command="{Binding DataContext.RemoveItemCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                    CommandParameter="{Binding Info.FilePath}" />
                <CheckBox Grid.Column="1" IsChecked="{Binding IsChecked}" />
                <Image Grid.Column="2" Source="{Binding Thumbnail}" Height="76" />
                <TextBlock Grid.Column="3" Text="{Binding TrimPeriod}" />
                <TextBlock Grid.Column="4" Text="{Binding Info.FrameRateString}" />
                <TextBlock Grid.Column="5" Text="{Binding Info.FileSizeString}" />
                <TextBlock Grid.Column="6" Text="{Binding Info.ScaleString}" />
                <TextBlock Grid.Column="7" Text="{Binding Info.VideoBitRateString}" />
                <TextBlock Grid.Column="8" Text="{Binding Info.VideoCodec}" />
                <TextBlock Grid.Column="9" Text="{Binding Info.FormattedDuration}" />
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <ui:SimpleStackPanel Margin="12" Spacing="8">
        <ui:SimpleStackPanel Orientation="Horizontal" Spacing="220" HorizontalAlignment="Center">
            <ui:SimpleStackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <Label Content="ファイル数：" VerticalContentAlignment="Center" />
                <Label Content="{Binding MovieInfoList.Count}" VerticalContentAlignment="Center" Width="60" />
                <Label Content="サムネイル：" VerticalContentAlignment="Center" />
                <ui:ToggleSwitch Toggled="SourceList_OnTemplateToggled"
                    IsOn="{Binding MainSettings.IsThumbnailVisible}" OffContent="非表示" OnContent="表示" />
            </ui:SimpleStackPanel>
            <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Right">
                <Button Content="ファイルを追加" Command="{Binding ReferSourceFilesCommand}" />
                <Button Content="クリア" Command="{Binding ClearSourceFilesCommand}" />
            </ui:SimpleStackPanel>
        </ui:SimpleStackPanel>
		<ListView Name="SourceList" Margin="10" Height="350" HorizontalAlignment="Stretch"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            behavior:ListViewDragBehavior.DragOverEffect="True"
            behavior:ListViewHorizontalScrollBehavior.ShiftHorizontalScroll="True"
            behavior:ListViewScrollSpeedBehavior.ScrollSpeedRate="0.01"
            Drop="SourceList_OnDrop"
            ItemsSource="{Binding MovieInfoList}"
            ItemTemplate="{StaticResource ThumbnailHidden}" >

			<ListView.ItemContainerStyle>
				<!--各項目をダブルクリックしたときのイベントハンドラを設定したい
				    ただし、Styleを定義するとuiデザインが一部デフォルトに上書きされてしまうため、
					BasedOnでModernWpfのDefaultListViewItemStyleを参照する-->
				<Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}" >
					<EventSetter Event="MouseDoubleClick" Handler="SourceList_OnItemDoubleClicked" />

                    <!--右クリックメニューを定義する-->
                    <!--ContextMenuからMainWindowViewModelに直接アクセスできないため、Tagプロパティを介して渡す-->
                    <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ListView}}" />
                    <Setter Property="ContextMenu" >
                        <Setter.Value>
                            <ContextMenu >
                                <!--通常はSourceListItemElementからBinding先を探そうとするため、Tag(=MainWindowViewModel)から探させるようにする-->
                                <MenuItem Header="時間範囲指定" 
                                    Command="{Binding PlacementTarget.Tag.TrimByTimeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                    CommandParameter="{Binding Info}" />
                                <MenuItem Header="動画の結合"
                                    Command="{Binding PlacementTarget.Tag.JoinMoviesCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                 />
                                <MenuItem Header="項目の複製"
                                    Command="{Binding PlacementTarget.Tag.DuplicateItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                    CommandParameter="{Binding Info}"
                                />
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
				</Style>
			</ListView.ItemContainerStyle>

			<ListView.View>
                <GridView>
                    <GridViewColumn Width="70" />
                    <GridViewColumn Width="50">
						<!--GridViewColumn.Headerから直接CheckBoxを指定するとイベントハンドラの指定ができないため
						    テンプレートを作ることでチェック時のイベントを取り出せるようにする-->
                        <GridViewColumn.HeaderTemplate>
                            <DataTemplate>
								<!--MainWindowViewModelのプロパティIsAllCheckedをバインドさせたいが、
								    ItemsSourceにMovieInfoListをバインドさせているため、
									そのままIsAllCheckedをバインドすると、MovieInfoListの要素からIsAllCheckedプロパティを探してしまう
									MainWindowViewModelからIsAllCheckedを参照するようにする-->
                                <CheckBox
                                    IsChecked="{Binding DataContext.IsAllChecked, RelativeSource={RelativeSource AncestorType=ListView}}"
                                    Checked="SourceListHeader0_OnChecked" 
                                    Unchecked="SourceListHeader0_OnUnchecked" />
                            </DataTemplate>
                        </GridViewColumn.HeaderTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="250" Header="ファイル名" />
                    <GridViewColumn Width="140" Header="時間範囲指定" />
					<GridViewColumn Width="80" Header="フレーム率" />
					<GridViewColumn Width="80" Header="サイズ"/>
					<GridViewColumn Width="150" Header="解像度(W : H)" />
                    <GridViewColumn Width="100" Header="ビットレート" />
					<GridViewColumn Width="80" Header="コーデック" />
                    <!--DataTemplateで定義しているよりもWidthを広くすることで要素が列からはみ出なくなる（？）-->
					<GridViewColumn Width="125" Header="再生時間" />
                </GridView>				
			</ListView.View>
		</ListView>

        <TabControl SelectedIndex="{Binding MainSettings.ProcessMode}">
            <TabItem Header="動画圧縮">
                <ui:SimpleStackPanel Orientation="Vertical" Spacing="5" Height="100">
                    <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10">
                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <Label Content="Width :" VerticalContentAlignment="Center" Margin="8" />
                            <ComboBox
                                Name="CompWidth"
                                IsEditable="True"
                                Text="{Binding MainSettings.Comp.ScaleWidth}"
                                HorizontalContentAlignment="Right"
                                Height="32" Width="80">
                                <ComboBoxItem Content="-1" />
                                <ComboBoxItem Content="1920" />
                                <ComboBoxItem Content="1600" />
                                <ComboBoxItem Content="1280" />
                                <ComboBoxItem Content="1024" />
                                <ComboBoxItem Content="768" />
                                <ComboBoxItem Content="640" />
                                <ComboBoxItem Content="480" />
                            </ComboBox>
                        </ui:SimpleStackPanel>
                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <Label Content="Height :" VerticalContentAlignment="Center" Margin="8" />
                            <ComboBox
                                Name="CompHeight"
                                IsEditable="True"
                                Text="{Binding MainSettings.Comp.ScaleHeight}"
                                HorizontalContentAlignment="Right"
                                Height="32" Width="80">
                                <ComboBoxItem Content="-1" />
                                <ComboBoxItem Content="1080" />
                                <ComboBoxItem Content="900" />
                                <ComboBoxItem Content="720" />
                                <ComboBoxItem Content="576" />
                                <ComboBoxItem Content="432" />
                                <ComboBoxItem Content="360" />
                                <ComboBoxItem Content="270" />
                            </ComboBox>
                        </ui:SimpleStackPanel>
                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <Label Content="フレーム率 :" VerticalContentAlignment="Center" Margin="8" />
                            <ComboBox
                                IsEditable="True"
                                Text="{Binding MainSettings.Comp.FrameRate}"
                                HorizontalContentAlignment="Right"
                                Height="32" Width="70">
                                <ComboBoxItem Content="-1" />
                                <ComboBoxItem Content="30" />
                                <ComboBoxItem Content="60" />
                            </ComboBox>
                        </ui:SimpleStackPanel>
                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <Label Content="コーデック :" VerticalContentAlignment="Center" Margin="8" />
                            <ComboBox
                                IsEditable="True"
                                Text="{Binding MainSettings.Comp.Codec}"
                                Height="32" Width="80">
                                <ComboBoxItem Content="h264" />
                                <ComboBoxItem Content="hevc" />
                            </ComboBox>
                        </ui:SimpleStackPanel>
                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <Label Content="音声削除 :" VerticalContentAlignment="Center" Margin="8" />
                            <CheckBox IsChecked="{Binding MainSettings.Comp.IsAudioEraced}" />
                        </ui:SimpleStackPanel>
                    </ui:SimpleStackPanel>
                    <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10">
                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <Label Content="出力形式 :" VerticalContentAlignment="Center" Margin="8" />
                            <ComboBox
                                IsEditable="True"
                                Text="{Binding MainSettings.Comp.Format}"
                                Height="32" Width="80" >
                                <ComboBoxItem Content="mp4" />
                            </ComboBox>
                        </ui:SimpleStackPanel>
                    </ui:SimpleStackPanel>
                </ui:SimpleStackPanel>
            </TabItem>

            <TabItem Header="音声抽出">
                <ui:SimpleStackPanel HorizontalAlignment="Center" Height="100">
                    <Label Content="動画ファイルから音声のみを抽出します。コーデックはAACです。" VerticalContentAlignment="Center" />
                </ui:SimpleStackPanel>
            </TabItem>

            <TabItem Header="再生速度">
                <ui:SimpleStackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Height="100" >
                    <Label Content="速度倍率：" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Width="80" />
                    <TextBox Text="{Binding MainSettings.Speed.SpeedRate}" 
                        Height="20" Width="80"
                        HorizontalContentAlignment="Right" VerticalContentAlignment="Center" />
                    <Label Content="倍速" VerticalContentAlignment="Center" Margin="10" />
                </ui:SimpleStackPanel>
            </TabItem>

            <TabItem Header="画像出力">
                <ui:SimpleStackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Height="100" Spacing="4">
                    <ui:SimpleStackPanel Orientation="Horizontal" Spacing="12">
                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <Label Content="フォーマット：" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" />
                            <ComboBox
                                IsEditable="True" 
                                Text="{Binding MainSettings.ImgGenerate.Format}"
                                Height="32" Width="80"
                                HorizontalContentAlignment="Left" VerticalContentAlignment="Center" >
                                <ComboBoxItem Content="png" />
                                <ComboBoxItem Content="jpg" />
                            </ComboBox>
                        </ui:SimpleStackPanel>

                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <Label Content="フレーム数 / 秒：" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" />
                            <TextBox Text="{Binding MainSettings.ImgGenerate.FramePerOneSecond}"
                                Height="20" Width="80"
                                HorizontalContentAlignment="Right" VerticalContentAlignment="Center" />
                        </ui:SimpleStackPanel>

                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <Label Content="合計フレーム数：" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" />
                            <TextBox Text="{Binding MainSettings.ImgGenerate.FrameSum}"
                                Height="20" Width="80"
                                HorizontalContentAlignment="Right" VerticalContentAlignment="Center" />
                        </ui:SimpleStackPanel>

                        <ui:SimpleStackPanel Orientation="Horizontal">
                            <Label Content="品質：" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" />
                            <ComboBox
                                 Text="{Binding MainSettings.ImgGenerate.Quality}"
                                Height="32" Width="80"
                                HorizontalContentAlignment="Right" VerticalContentAlignment="Center" >
                                <ComboBoxItem Content="-1" />
                                <ComboBoxItem Content="0" />
                                <ComboBoxItem Content="1" />
                                <ComboBoxItem Content="2" />
                            </ComboBox>
                        </ui:SimpleStackPanel>
                    </ui:SimpleStackPanel>
                </ui:SimpleStackPanel>
            </TabItem>
        </TabControl>

        <ui:SimpleStackPanel Orientation="Horizontal" Spacing="20">
            <ui:SimpleStackPanel Orientation="Horizontal">
                <Label Content="出力先 :" VerticalContentAlignment="Center" />
                <TextBox 
                    Text="{Binding OutputDirectory}"
                    behavior:TextBoxDragBehavior.DragOverEffect="True"
                    Drop="OutDirectory_OnDrop"
                    Margin="10" Width="350" />
                <Button 
                    Command="{Binding ReferOutDirectoryCommand}"
                    Content="参照" />
            </ui:SimpleStackPanel>
            <ui:SimpleStackPanel Orientation="Horizontal">
                <Label Content="出力タグ :" VerticalContentAlignment="Center" Margin="8" />
                <TextBox
                    Text="{Binding MainSettings.AttachedNameTag}"
                    Height="30" Width="100" />
            </ui:SimpleStackPanel>
            <Button Content="実行" Width="80" HorizontalContentAlignment="Center"
                Style="{StaticResource AccentButtonStyle}"
                Command="{Binding RunCommand}"
                Foreground="Black" FontWeight="Bold" FontSize="18" FontFamily="Arial" />
        </ui:SimpleStackPanel>
        <ui:SimpleStackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Label Content="完了後フォルダを開く：" VerticalAlignment="Center" />
            <CheckBox IsChecked="{Binding MainSettings.OpenExplorer}" />
        </ui:SimpleStackPanel>

        <TextBox 
            Text="{Binding LogHistory}"
            IsReadOnly="True"
            TextWrapping="Wrap" 
            VerticalScrollBarVisibility="Visible"
            behavior:TextBoxBehavior.AutoScrollToEnd="True"
            Height="150" 
            HorizontalAlignment="Stretch"
             />
    </ui:SimpleStackPanel>
</Window>
